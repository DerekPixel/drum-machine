{"version":3,"sources":["components/Display.jsx","components/DrumPad.jsx","components/DrumPads.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Display","text","id","DrumPad","bankArr","index","setDisplay","useEffect","document","addEventListener","e","key","toUpperCase","charCodeAt","keyCode","playSound","sound","getElementById","keyTrigger","currentTime","play","className","onClick","src","url","DrumPads","makeDrumPads","map","padObj","i","App","useState","displayText","setDisplayText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gNASeA,EARC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAChB,OACE,qBAAKC,GAAG,UAAR,SACGD,KCgCQE,EAlCC,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAEhCC,qBAAU,WACRC,SAASC,iBAAiB,WAAW,SAACC,GAChCA,EAAEC,IAAIC,cAAcC,WAAW,KAAOT,EAAQC,GAAOS,SACvDC,UAKN,IAAMA,EAAY,WAChB,IAAMC,EAAQR,SAASS,eAAeb,EAAQC,GAAOa,YACrDF,EAAMG,YAAc,EACpBH,EAAMI,OACNd,EAAWF,EAAQC,GAAOH,KAG5B,OACE,yBACEmB,UAAU,WACVnB,GAAIE,EAAQC,GAAOH,GACnBoB,QAASP,EAHX,UAKGX,EAAQC,GAAOa,WAChB,uBACAG,UAAU,OACVnB,GAAIE,EAAQC,GAAOa,WACnBK,IAAKnB,EAAQC,GAAOmB,UCkDXC,EA3EE,SAAC,GAAkB,IAAjBnB,EAAgB,EAAhBA,WA2DXoB,EAzDW,CACf,CACEZ,QAAS,GACTI,WAAY,IACZhB,GAAI,aACJsB,IAAK,4DAEP,CACEV,QAAS,GACTI,WAAY,IACZhB,GAAI,OACJsB,IAAK,4DAEP,CACEV,QAAS,GACTI,WAAY,IACZhB,GAAI,OACJsB,IAAK,4DAEP,CACEV,QAAS,GACTI,WAAY,IACZhB,GAAI,WACJsB,IAAK,8DAEP,CACEV,QAAS,GACTI,WAAY,IACZhB,GAAI,SACJsB,IAAK,4DAEP,CACEV,QAAS,GACTI,WAAY,IACZhB,GAAI,MACJsB,IAAK,0DAEP,CACEV,QAAS,GACTI,WAAY,IACZhB,GAAI,OACJsB,IAAK,8DAEP,CACEV,QAAS,GACTI,WAAY,IACZhB,GAAI,MACJsB,IAAK,8DAEP,CACEV,QAAS,GACTI,WAAY,IACZhB,GAAI,SACJsB,IAAK,2DAIqBG,KAAI,SAACC,EAAQC,EAAGzB,GAAZ,OAChC,cAAC,EAAD,CAEEA,QAASA,EACTC,MAAOwB,EACPvB,WAAYA,GAHPF,EAAQyB,GAAG3B,OAOpB,OACE,8BACGwB,KCzDQI,MAZf,WAAgB,IAAD,EAEuBC,mBAAS,IAFhC,mBAERC,EAFQ,KAEKC,EAFL,KAIb,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,CAAUf,WAAY,SAACJ,GAAD,OAAQ+B,EAAeD,EAAc9B,MAC3D,cAAC,EAAD,CAASD,KAAM+B,QCANE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASS,eAAe,iBAM1BiB,K","file":"static/js/main.4d8f033f.chunk.js","sourcesContent":["\r\nconst Display = ({text}) => {\r\n  return (\r\n    <div id='display'>\r\n      {text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Display\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst DrumPad = ({bankArr, index, setDisplay}) => {\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.key.toUpperCase().charCodeAt(0) === bankArr[index].keyCode) {\r\n        playSound();\r\n      }\r\n    })\r\n  })\r\n\r\n  const playSound = () => {\r\n    const sound = document.getElementById(bankArr[index].keyTrigger);\r\n    sound.currentTime = 0;\r\n    sound.play();\r\n    setDisplay(bankArr[index].id)\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className='drum-pad'\r\n      id={bankArr[index].id}\r\n      onClick={playSound}\r\n    >\r\n      {bankArr[index].keyTrigger} \r\n      <audio \r\n      className='clip'\r\n      id={bankArr[index].keyTrigger} \r\n      src={bankArr[index].url}>\r\n      \r\n      </audio>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default DrumPad\r\n","\r\n\r\nimport DrumPad from \"./DrumPad\"\r\n\r\nconst DrumPads = ({setDisplay}) => {\r\n\r\n  const drumBank = [\r\n    {\r\n      keyCode: 81,\r\n      keyTrigger: 'Q',\r\n      id: 'closed-hat',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n    },\r\n    {\r\n      keyCode: 87,\r\n      keyTrigger: 'W',\r\n      id: 'flam',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n    },\r\n    {\r\n      keyCode: 69,\r\n      keyTrigger: 'E',\r\n      id: 'kick',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n    },\r\n    {\r\n      keyCode: 65,\r\n      keyTrigger: 'A',\r\n      id: 'open-hat',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n    },\r\n    {\r\n      keyCode: 83,\r\n      keyTrigger: 'S',\r\n      id: 'pd-hat',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n    },\r\n    {\r\n      keyCode: 68,\r\n      keyTrigger: 'D',\r\n      id: 'rim',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n    },\r\n    {\r\n      keyCode: 90,\r\n      keyTrigger: 'Z',\r\n      id: 'sdst',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n    },\r\n    {\r\n      keyCode: 88,\r\n      keyTrigger: 'X',\r\n      id: 'snr',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n    },\r\n    {\r\n      keyCode: 67,\r\n      keyTrigger: 'C',\r\n      id: 'snroff',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n    },\r\n  ]\r\n  \r\n  const makeDrumPads = drumBank.map((padObj, i, bankArr) => \r\n    <DrumPad \r\n      key={bankArr[i].id}\r\n      bankArr={bankArr}\r\n      index={i}\r\n      setDisplay={setDisplay}\r\n    />\r\n  )  \r\n\r\n  return (\r\n    <div>\r\n      {makeDrumPads}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DrumPads\r\n","import './App.css';\nimport React, { useState } from 'react'\nimport Display from './components/Display';\nimport DrumPads from './components/DrumPads';\n\nfunction App() {\n\n  var [displayText, setDisplayText] = useState('');\n\n  return (\n    <div className=\"App\">\n      <DrumPads setDisplay={(id) => setDisplayText(displayText = id)} />\n      <Display text={displayText} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('drum-machine')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}